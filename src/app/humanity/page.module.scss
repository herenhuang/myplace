@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Geist:wght@100..900&family=Hedvig+Letters+Sans&family=Hedvig+Letters+Serif:opsz@12..24&family=IM+Fell+Double+Pica:ital@0;1&family=Instrument+Sans:ital,wght@0,400..700;1,400..700&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&family=Lora:ital,wght@0,400..700;1,400..700&family=Newsreader:ital,opsz,wght@0,6..72,200..800;1,6..72,200..800&family=Oswald:wght@200..700&family=Ovo&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&family=Sora:wght@100..800&family=Unbounded:wght@200..900&display=swap');

$orange: #ff5e00;
$body: 'Instrument Sans', 'DM Sans', serif;

.pageFrame {
  min-height: 100dvh;
  width: 100%;
  margin: 0 auto;
  padding: 1.5rem;
  max-width: 1100px;
  box-sizing: border-box;
}

@media (max-width: 768px) {
  .pageFrame {
    padding: 1rem;
  }
}

.heroCard {
  width: 100%;
  height: 100dvh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.heroTitle {
  font-size: clamp(2.25rem, 6vw, 3.25rem);
  line-height: 1.05;
  font-weight: 800;
  color: #111827;
  letter-spacing: -0.04em;
}

.heroSubtitle {
  font-size: clamp(1.05rem, 2.6vw, 1.35rem);
  color: #334155;
  line-height: 1.5;
}

.toggleRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.75rem;
  padding: 1rem 1.25rem;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.72);
  border: 1px solid rgba(15, 23, 42, 0.08);
}

.toggleLabel {
  display: flex;
  flex-direction: column;
  gap: 0.2rem;
  font-size: 0.95rem;
  color: #1f2937;
  font-weight: 600;
}

.toggleSubtext {
  font-size: 0.8rem;
  color: #6b7280;
  font-weight: 400;
}

.startActionRow {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  align-items: center;
}

.primaryButton {
  background: $orange;
  color: #ffffff;
  font-weight: 700;
  padding:  8px 16px;
  border-radius: 999px;
  letter-spacing: -0.5px;
  font-size: 1rem;
  display: inline-flex;
  gap: 0.5rem;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: .2s ease;

  &:hover{
    opacity: .8;
  }
}

.primaryButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: none;
}


.secondaryButton {
  background: rgba(black, .08);
  color: black;
  font-weight: 700;
  padding:  8px 16px;
  border-radius: 999px;
  letter-spacing: -0.5px;
  font-size: 1rem;
  display: inline-flex;
  gap: 0.5rem;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: .2s ease;

  &:hover{
    background: rgba(black, .12);
  }
}

.secondaryButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.card {
  background: white;
  box-sizing: border-box;
  border: 2px solid rgba(white, .5);
  
  border-radius: 16px;
  display: flex;
  justify-content: flex-start;
  flex-direction: column;
  overflow: visible;
  max-width: 50vw;
  max-height: 80vh;
  gap: 1.5rem;
  width: fit-content;
  position: relative;

  @media (max-width: 768px) {
    max-width: 100%;
    max-height: 100%;
    padding: 24px;
    box-sizing: border-box;
    overflow-y: visible;
    width: 100vw;
  }
}

.cardFloating {
  animation: cardFloatUp 0.8s ease-out forwards;
}

@keyframes cardFloatUp {
  0% {
    transform: translateY(30px);
    opacity: 0;
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}

// .textQuestionsFloating {
//   width: 350px;
//   max-width: 350px;
//   padding: 24px;
//   opacity: 1;
// }

@keyframes textQuestionsExpandIn {
  0% {
    width: 0;
    max-width: 0;
    padding: 0;
    opacity: 0;
  }
  100% {
    width: 350px;
    max-width: 350px;
    padding: 24px;
    opacity: 1;
  }
}

.refreshButton {
  position: fixed;
  bottom: 24px;
  right: 24px;
  width: 56px;
  height: 56px;
  border-radius: 50%;
  background: rgba(249, 115, 22, 0.95);
  backdrop-filter: blur(8px);
  border: 2px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15), 0 2px 8px rgba(249, 115, 22, 0.25);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  z-index: 100;
  display: none;

  &:hover {
    background: rgba(249, 115, 22, 1);
    transform: scale(1.05) rotate(90deg);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2), 0 3px 12px rgba(249, 115, 22, 0.4);
  }

  &:active {
    transform: scale(0.95) rotate(90deg);
  }

  svg {
    width: 24px;
    height: 24px;
    color: white;
    transition: transform 0.2s ease;
  }
}

.simulationLayout {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 40px;
  width: 100%;
  flex: 1;

  @media (max-width: 768px) {
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    overflow-y: scroll;
    padding: 24px 0;
    max-height: 100%;
    width: 100vw;
    gap: 24px;
  }
}

.contextContainer {
  flex: 1;
  max-width: 400px;
  margin-bottom: 24px;
  @media screen and (max-width: 768px) {
    padding: 24px;
    margin-bottom: 0;
  }
}

.contextImageWrapper {
  display: flex;
  justify-content: flex-start;
  margin-top: 24px;
  margin-bottom: 0;
  opacity: 0;
  transform: translateY(20px);
  transition: none;
}

.contextImageVisible {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.contextImage {
  max-width: 200px;
  max-height: 200px;
  object-fit: contain;
  border-radius: 12px;
}


// New approach: Follow-up questions inside context container
.followUpQuestions {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  margin-top: 32px;
  transition: none;

  // On mobile, always show when rendered (no collapse)
  @media (max-width: 768px) {
    max-height: none;
    opacity: 1;
    margin-top: 24px;
  }
}

.followUpQuestionsVisible {
  max-height: 1000px;
  opacity: 1;
  margin-top: 32px;
  transition: max-height 0.5s ease-out, opacity 0.5s ease-out, margin-top 0.5s ease-out; // Smooth show

  // On mobile, keep consistent spacing
  @media (max-width: 768px) {
    margin-top: 24px;
  }
}

.contextText {
  font-family: $body;
  font-size: 18px;
  letter-spacing: -0.5px;
  font-weight: 500;
  line-height: 1.3;
  color: black;
  margin-bottom: 24px;
}


.contextQuestion {
  font-family: $body;
  font-size: 18px;
  font-weight: 650;
  letter-spacing: -0.5px;
  line-height: 1.3;
  color: black;
  min-height: 24px;
}


@keyframes blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

.stepBadge {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.35rem 0.9rem;
  border-radius: 999px;
  background: rgba(15, 23, 42, 0.06);
  color: #0f172a;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  font-weight: 700;
}

.stepHeader {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.stepTitle {
  font-size: clamp(1.5rem, 4vw, 2.1rem);
  font-weight: 700;
  color: #111827;
  letter-spacing: -0.02em;
}

.stepDescription {
  color: #4b5563;
  font-size: 1rem;
  line-height: 1.55;
  max-width: 600px;
}

.rescueGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 1rem;

  @media screen and (max-width: 768px) {
    display: flex !important;
    flex-direction: column;
    gap: 12px;
  }
}

.rescueCard {
  position: relative;
  padding: 1rem;
  border-radius: 18px;
  border: 1px solid rgba(15, 23, 42, 0.1);
  background: #ffffff;
  text-align: left;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  transition: transform 0.18s ease, box-shadow 0.18s ease, border-color 0.18s ease;

  
}

.rescueCard:not(.rescueCardDisabled):hover {
  transform: translateY(-2px);
  border-color: rgba(249, 115, 22, 0.4);
  box-shadow: 0 12px 25px rgba(249, 115, 22, 0.12);
}

.rescueCanvasCardSelected {
  background: red;
  .rescueEmoji {
    border-color: rgba(249, 115, 22, 0.6);
    filter: drop-shadow(0 0 10px rgba(white, 1));
  }
}

.rescueCardDisabled {
  opacity: 0.55;
  cursor: not-allowed;
}

.rescueEmoji {
  font-size: 60px;
  width: fit-content;
  filter: drop-shadow(0 0 10px rgba(white, 1));

  @media screen and (max-width: 768px) {
    font-size: 32px;
  }
}

.rescueBadge {
  position: absolute;
  top: 0.7rem;
  right: 0.7rem;
  width: 2rem;
  height: 2rem;
  border-radius: 999px;
  background: $orange;
  color: white;
  font-weight: 700;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 0.95rem;
}

.noteTextarea {
  width: 400px;
  background: rgba(black, .03);
  border-bottom: 2px solid rgba(black, .05);
  border-radius: 8px 8px 0 0;
  padding: 18px;
  min-height: 100px;
  font-size: 16px;
  font-weight: 500;
  line-height: 1.3;
  letter-spacing: -.4px;
  resize: none;
  transition: .2s ease;

  &:focus{
    outline: none;
    border-color: rgba(black, .1);
  }
}

/* Canvas-based rescue picker */
.rescueCanvas {
  position: relative;
  width: 100%;
  height: 70vh; /* 70% of viewport height on desktop */
  aspect-ratio: 1/1;
  min-height: 500px;
  max-height: 800px;
  margin: 0 auto;
  background: linear-gradient(135deg, #fef3c7 0%, #fed7aa 50%, #fecaca 100%);
  border-radius: 24px;
  border: 2px dashed rgba(249, 115, 22, 0.3);
  overflow: hidden;
  box-shadow: inset 0 2px 12px rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  justify-content: center;
  
  @media (max-width: 768px) {
    height: calc(100vh - 300px); /* Full available space on mobile, minus header/footer */
    min-height: 400px;
    max-height: none;
    border-radius: 16px;
  }
}

.rescueCanvasCard {
  position: absolute;
  left: 50%;
  top: 50%;
  padding: 12px;
  border-radius: 16px;
  text-align: left;
  display: flex;
  flex-direction: column;
  gap: 16px;
  cursor: grab;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  transform-origin: center;
  min-width: 120px;
  max-width: 180px;
  touch-action: none;
  user-select: none;
  
  // Ensure child elements don't block pointer events
  * {
    pointer-events: none;
  }
  
  &:active {
    cursor: grabbing;
  }
  
  @media (max-width: 768px) {
    min-width: 120px;
    max-width: 150px;
    padding: 0.7rem;
  }
}

.rescueCanvasCard:not(.rescueCanvasCardDisabled):hover {
  border-color: rgba(249, 115, 22, 0.4);
  box-shadow: 0 8px 20px rgba(249, 115, 22, 0.15);
}

.rescueCanvasCardSelected {
  border-color: $orange;
  border-width: 3px;
  box-shadow: 0 0 0 4px rgba(249, 115, 22, 0.2), 0 8px 24px rgba(249, 115, 22, 0.25);
  background: linear-gradient(135deg, #fff7ed 0%, #ffffff 100%);
}

.rescueCanvasCardDisabled {
  opacity: 0.5;
  cursor: not-allowed;
  filter: grayscale(0.3);
}

.chatPhone{
  width: 400px;
  height: 700px;
  position: relative;
  overflow: hidden;
  background: white;
  border-radius: 32px;
  box-shadow: -8px 20px 60px rgba(black, 0.12);
}

.chatWindow {
  background: #ffffff;
  flex: 1;
  overflow-y: scroll;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  box-sizing: border-box;
  padding: 16px;
  height: calc(100% - 160px);
}

.chatBubbleNpc {
  align-self: flex-start;
  background: #eaeaed;
  color: #000000;
  padding: 10px 14px;
  border-radius: 18px;
  max-width: 75%;
  font-size: 14px;
  line-height: 1.2;
  letter-spacing: -0.25px;
  position: relative;
  animation: floatUp 0.3s ease-out;
}

.chatBubbleUser {
  align-self: flex-end;
  background: linear-gradient(to top left, #0f83ff 50%, #61abff);
  color: white;
  padding: 10px 14px;
  border-radius: 18px;
  max-width: 75%;
  font-size: 14px;
  line-height: 1.2;
  font-weight: 500;
  letter-spacing: -0.25px;
  animation: floatUp 0.3s ease-out;
}

@keyframes floatUp {
  from {
    transform: translateY(10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.typingIndicator {
  align-self: flex-start;
  background: #eaeaed;
  padding: 10px 14px;
  border-radius: 18px;
  max-width: 75%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  min-width: 60px;
  height: 36px;
  animation: floatUp 0.4s ease-out;
}

.typingDot {
  width: 8px;
  height: 8px;
  background-color: #8e8e93;
  border-radius: 50%;
  animation: typingBounce 1.4s infinite ease-in-out;
  
  &:nth-child(1) {
    animation-delay: 0s;
  }
  
  &:nth-child(2) {
    animation-delay: 0.2s;
  }
  
  &:nth-child(3) {
    animation-delay: 0.4s;
  }
}

@keyframes typingBounce {
  0%, 60%, 100% {
    transform: translateY(0);
    opacity: 0.7;
  }
  30% {
    transform: translateY(-4px);
    opacity: 1;
  }
}

.chatNpcMeta {
  display: none; // Replaced by chatHeader
}

.chatHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 16px 16px 12px 16px;
  width: 100%;
  background: rgba(black, .03);
  box-sizing: border-box;
  border-bottom: 1px solid #f0f0f0;
}

.chatHeaderBack {
  background: none;
  border: none;
  cursor: pointer;
  color: #007aff;
}

.chatHeaderContact {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.chatHeaderAvatar {
  font-size: 24px;
  width: 44px;
  height: 44px;
  border-radius: 50%;
  background: #f0f0f0;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
}

.chatHeaderName {
  font-size: 13px;
  font-weight: 600;
  color: #000;
}

.chatHeaderVideo {
  background: none;
  border: none;
  cursor: pointer;
  color: #007aff;
  padding: 8px;
}

.chatInputWrapper {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  align-items: center;
  margin: 16px;
  border-radius: 24px;
  box-sizing: border-box;
  border: 1px solid #e5e5ea;
}

.chatInput {
  flex: 1;
  width: 50% !important;
  border-radius: 22px;
  padding: 12px 16px;
  box-sizing: border-box;
  font-size: 14px;
  font-weight: 500;
  line-height: 1.3;
  letter-spacing: -0.25px;
  background: #ffffff;
  resize: none;
  min-width: 40px;
  transition: border-color 0.18s ease, box-shadow 0.18s ease;
  min-height: auto;

  &:disabled {
    background: #f0f0f0;
    color: #000000;
  }
}

.chatInput:focus {
  outline: none;
}

.chatSendButton {
  position: absolute;
  right: 6px;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background-color: #007aff;
  color: white;
  flex-shrink: 0;
  display: flex;
  box-sizing: border-box;
  align-items: center;
  justify-content: center;
  border: none;
  cursor: pointer;
  transition: opacity 0.2s ease;
}

.chatSendButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.iconSend {
  width: 18px;
  height: 18px;
  transform: translateX(1px);
}

.iconTrackWrapper {
  width: 100%;
  overflow-x: auto;
  padding-bottom: 0.5rem;
}

.iconTrack {
  display: flex;
  gap: 0.85rem;
  padding: 0.5rem;
}

.iconChip {
  background: #ffffff;
  border: 1px solid rgba(15, 23, 42, 0.12);
  border-radius: 18px;
  padding: 24px;
  min-width: 120px;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  cursor: grab;
  box-shadow: 0 12px 24px rgba(15, 23, 42, 0.08);
  transition: transform 0.18s ease, border-color 0.18s ease, box-shadow 0.18s ease;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.iconChipDragging {
  transform: scale(1.04);
  box-shadow: 0 20px 35px rgba(79, 70, 229, 0.28);
  border-color: rgba(79, 70, 229, 0.55);
}

.iconChipDisabled {
  opacity: 0.55;
  cursor: not-allowed;
}

.iconEmoji {
  font-size: 60px;
}

.iconLabel {
  font-size: 0.95rem;
  font-weight: 600;
  color: #111827;
}

.iconMeaning {
  font-size: 0.78rem;
  color: #6b7280;
}

.themeInput {
  border-radius: 999px;
  border: 1px solid rgba(15, 23, 42, 0.12);
  padding: 0.75rem 1rem;
  font-size: 0.95rem;
  transition: border-color 0.18s ease, box-shadow 0.18s ease;
}

.themeInput:focus {
  border-color: rgba(249, 115, 22, 0.5);
  box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.15);
  outline: none;
}

.dialLayout {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

@media (min-width: 900px) {
  .dialLayout {
    flex-direction: row;
    align-items: center;
  }
}

.dialVisual {
  display: flex;
  justify-content: center;
  align-items: center;
}

.dialAmount {
  font-size: 1.5rem;
  font-weight: 700;
  fill: #111827;
}

.dialSubtitle {
  font-size: 0.85rem;
  font-weight: 500;
  fill: #64748b;
}

.dialRow {
  display: flex;
  flex-direction: column;
  gap: 0.6rem;
  padding: 0.85rem 1rem;
  border-radius: 18px;
  background: rgba(248, 250, 252, 0.65);
  border: 1px solid rgba(15, 23, 42, 0.08);
}

.colorSwatch {
  width: 14px;
  height: 14px;
  border-radius: 50%;
  border: 2px solid #fff;
  box-shadow: 0 0 0 1px rgba(15, 23, 42, 0.2);
}

.dialSlider {
  width: 100%;
  accent-color: $orange;
}

.selectField {
  border-radius: 999px;
  border: 1px solid rgba(15, 23, 42, 0.12);
  padding: 0.75rem 1rem;
  font-size: 0.95rem;
  background: #ffffff;
}

.associationCue {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.associationInput {
  border-radius: 40px;
  border: 1px solid rgba(15, 23, 42, 0.12);
  padding: 0.9rem 1rem;
  font-size: 16px;
  font-weight: 500;
  letter-spacing: -.3px;
  text-align: center;
  text-transform: uppercase;
}

.associationInput:focus {
  outline: none;
}

.sentimentButton {
  display: inline-flex;
  align-items: center;
  gap: 0.4rem;
  padding: 0.45rem 0.9rem;
  border-radius: 999px;
  border: 1px solid rgba(15, 23, 42, 0.12);
  background: #ffffff;
  font-size: 0.85rem;
  color: #334155;
}

.sentimentButtonActive {
  composes: sentimentButton;
  border-color: rgba(79, 70, 229, 0.5);
  background: rgba(79, 70, 229, 0.08);
  color: #4338ca;
  font-weight: 600;
}

.freeformTextarea {
  width: 400px;
  background: rgba(black, .03);
  border-bottom: 2px solid rgba(black, .05);
  border-radius: 8px 8px 0 0;
  padding: 18px;
  min-height: 180px;
  font-size: 16px;
  font-weight: 500;
  line-height: 1.3;
  letter-spacing: -.4px;
  resize: none;
  transition: .2s ease;

  &:focus{
    outline: none;
    border-color: rgba(black, .1);
  }
}

.stepNav {
  display: flex;
  gap: 0.5rem;
  overflow-x: auto;
  padding-bottom: 0.75rem;
}

.stepNavButton {
  min-width: 48px;
  height: 48px;
  border-radius: 999px;
  border: 1px solid rgba(15, 23, 42, 0.12);
  background: #ffffff;
  font-weight: 600;
  font-size: 0.95rem;
  color: #0f172a;
  transition: border-color 0.18s ease, background 0.18s ease, color 0.18s ease;
}

.stepNavButtonActive {
  composes: stepNavButton;
  background: #0f172a;
  color: #ffffff;
  border-color: #0f172a;
}

.progressBar {
  width: 100%;
  flex-shrink: 0;
  display: flex;
  gap: 8px;
  box-sizing: border-box;
  padding: 0 24px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  //transform: translateY(-100%);
  transition: transform 0.3s ease-in-out;
  backdrop-filter: blur(8px);
}

.progressBarVisible {
  transform: translateY(0);
}

.progressBarWrapper {
  flex: 1;
  padding: 24px 0;
  cursor: pointer;
  
  &:hover .progressBarTrack {
    background: rgba(148, 163, 184, 0.35);
  }
}

.progressBarTrack {
  width: 100%;
  height: 4px;
  background: rgba(148, 163, 184, 0.25);
  border-radius: 999px;
  position: relative;
  overflow: hidden;
  transition: background 0.2s ease, box-shadow 0.2s ease;
  box-shadow: 0 0 0 0px transparent;
}

.progressBarTrackActive {
  composes: progressBarTrack;
  box-shadow: 0 0 0 2px $orange;
}

.progressInner {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  border-radius: 999px;
  background: $orange;
  transition: width 0.3s ease;
}

.resultsFrame {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.analyzingPanel {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.2rem;
  padding: 3rem 1.5rem;
}

.singlePageToggle {
  position: relative;
  width: 52px;
  height: 30px;
}

.singlePageToggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

.singlePageSlider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(15, 23, 42, 0.2);
  transition: 0.2s;
  border-radius: 999px;
}

.singlePageSlider::before {
  position: absolute;
  content: "";
  height: 24px;
  width: 24px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: 0.2s;
  border-radius: 50%;
  box-shadow: 0 4px 10px rgba(15, 23, 42, 0.15);
}

.singlePageToggle input:checked + .singlePageSlider {
  background-color: $orange;
}

.singlePageToggle input:checked + .singlePageSlider::before {
  transform: translateX(22px);
}

// Vertical Slider Styles
.verticalSliderContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
  padding: 12px;
}

.verticalSliderValue {
  min-height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.verticalSliderTrack {
  position: relative;
  width: 32px;
  height: 200px;
  background: rgba(148, 163, 184, 0.15);
  border-radius: 24px;
  cursor: pointer;
  transition: 0.2s ease;
  user-select: none;
  
  &:hover {
    background: rgba(148, 163, 184, 0.2);
  }

  &.disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

.verticalSliderFill {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: 24px;
  transition: height 0.15s ease, background-color 0.2s ease;
  pointer-events: none;
}

.verticalSliderThumb {
  position: absolute;
  left: 50%;
  transform: translate(-50%, 50%);
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: white;
  border: 3px solid;
  cursor: grab;
  transition: transform 0.15s ease, box-shadow 0.15s ease;
  pointer-events: none;

  &.dragging {
    cursor: grabbing;
    transform: translate(-50%, 50%) scale(1.2);
  }
}

.verticalSliderLabel {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  max-width: 110px;
}

.horizontalSliderGroup {
  display: flex;
  justify-content: space-around;
  align-items: flex-start;
  gap: 16px;
  padding: 24px 16px;
  background: rgba(249, 250, 251, 0.5);
  border-radius: 16px;
  flex-wrap: wrap;
}

// Rescue Grid Styles
.rescueGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 16px;
  width: 100%;
  max-width: 720px;
  margin: 0 auto;
  
  @media (max-width: 768px) {
    grid-template-columns: repeat(2, 1fr);
    gap: 12px;
  }
}

.rescueGridCard {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0px;
  padding:  12px;
  background: white;
  aspect-ratio: 1/1;
  border: 1px solid rgba(148, 163, 184, 0.3);
  border-radius: 120px;
  cursor: pointer;
  transition: all 0.2s ease;
  height: 160px;

  @media screen and (max-width: 768px) {
    flex-direction: row;
    gap: 12px;
    height: 80px;
    aspect-ratio: none;
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

.rescueGridCardSelected {
  background: white;
  border-color: white;
  box-shadow: 0 0 40px rgba(249, 115, 22, 0.4);
}

.rescueGridCardDisabled {
  opacity: 0.4;
  cursor: not-allowed;
  
  &:hover {
    transform: none;
    border-color: rgba(148, 163, 184, 0.2);
    box-shadow: none;
  }
}

// Divergent Association Styles
.divergentAssociationContainer {
  display: flex;
  flex-direction: column;
  gap: 24px;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
}

.divergentAssociationGrid {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: 16px;
  width: 100%;
}

.wordInputWrapper {
  display: flex;
  align-items: center;
  gap: 12px;
}

.wordLabel {
  font-size: 16px;
  font-weight: 600;
  color: black;
  text-transform: uppercase;
  letter-spacing: 0.5px;

  width: 32px;
  height: 32px;
  background: rgba(black, .05);
  border-radius: 16px;
  text-align: center;

  line-height: 32px;

}

.wordInput {
  width: 240px;
  padding: 8px 0px;
  border-bottom: 2px solid rgba(black, 0.05);
  font-size: 16px;
  font-weight: 500;
  letter-spacing: -0.3px;
  transition: all 0.2s ease;

  &::placeholder {
    color: rgba(0, 0, 0, 0.3);
  }
  
  &:focus {
    outline: none;
    border-color: rgba(black, .25);
  }
}

.divergentHint {
  text-align: center;
  color: rgba(0, 0, 0, 0.4);
  font-size: 14px;
  font-style: italic;
  display: none;
}

// Alternative Uses Styles
.alternativeUsesContainer {
  display: flex;
  flex-direction: column;
  gap: 8px;
  width: 400px;
  max-width: 100%;
  margin: 0 auto;
}

.objectPrompt {
  font-size: 16px;
  color: rgba(0, 0, 0, 0.7);
  letter-spacing: -.4px;
  margin: 18px 0 0 0;
  font-weight: 400;
  
  strong {
    color: black;
    font-weight: 600;
  }
}

.usesList {
  display: flex;
  flex-direction: column;
  gap: 12px;

  max-height: 60vh;
  overflow-y: scroll;
}

.useItem {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px;
  width: 100%;
  background: rgba(black, .05);
  border-radius: 12px;
  transition: all 0.2s ease;
  
  &:hover {
    border-color: rgba(249, 115, 22, 0.3);
  }
}

.dragHandle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 12px;
  height: 24px;
  color: rgba(0, 0, 0, 0.3);
  cursor: grab;
  flex-shrink: 0;
  
  &:active {
    cursor: grabbing;
  }
}

.useText {
  flex: 1;
  padding: 8px 12px;
  font-size: 15px;
  font-weight: 500;
  letter-spacing: -0.3px;
  color: rgba(0, 0, 0, 0.8);
}

.useTextarea {
  width: 100%;
  padding: 14px 18px;
  box-sizing: border-box;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  font-size: 15px;
  font-weight: 500;
  letter-spacing: -0.3px;
  line-height: 1.5;
  resize: none;
  transition: all 0.2s ease;
  
  &::placeholder {
    color: rgba(0, 0, 0, 0.3);
  }
  
  &:focus {
    outline: none;
    border-color: rgba(black, .2);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: rgba(0, 0, 0, 0.02);
  }
}

.removeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  background: rgba(239, 68, 68, 0.1);
  color: rgb(239, 68, 68);
  border: none;
  border-radius: 50%;
  font-size: 24px;
  line-height: 1;
  cursor: pointer;
  transition: all 0.2s ease;
  flex-shrink: 0;
  
  &:hover {
    background: rgba(239, 68, 68, 0.2);
    transform: scale(1.1);
  }
}

.addButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 14px 24px;
  background: white;
  border: 2px dashed rgba(249, 115, 22, 0.4);
  border-radius: 12px;
  color: $orange;
  font-size: 15px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:hover:not(:disabled) {
    background: rgba(249, 115, 22, 0.05);
    border-color: $orange;
  }
  
  &:disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }
}

.plusIcon {
  font-size: 20px;
  font-weight: bold;
}

// Three Words Styles
.threeWordsContainer {
  display: flex;
  flex-direction: column;
  gap: 24px;
  width: 100%;
  max-width: 700px;
  margin: 0 auto;
}

.wordsPrompt {
  display: flex;
  flex-direction: column;
  gap: 16px;
  align-items: center;
}

.wordsInstructions {
  font-size: 16px;
  color: rgba(0, 0, 0, 0.6);
  text-align: center;
}

.wordChips {
  display: flex;
  gap: 12px;
  flex-wrap: wrap;
  justify-content: center;
}

.wordChip {
  padding: 10px 20px;
  background: rgba(0, 0, 0, 0.05);
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-radius: 999px;
  font-size: 16px;
  font-weight: 600;
  color: rgba(0, 0, 0, 0.6);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  align-items: center;
  gap: 8px;
  position: relative;
}

.wordChipIncluded {
  background: rgba(34, 197, 94, 0.15);
  border-color: rgb(34, 197, 94);
  color: rgb(21, 128, 61);
  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1),
              0 4px 12px rgba(34, 197, 94, 0.2);
  transform: scale(1.05);
  animation: lightUp 0.3s ease-out;
}

@keyframes lightUp {
  0% {
    box-shadow: 0 0 0 0 rgba(34, 197, 94, 0);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 0 6px rgba(34, 197, 94, 0.2),
                0 4px 16px rgba(34, 197, 94, 0.3);
    transform: scale(1.08);
  }
  100% {
    box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1),
                0 4px 12px rgba(34, 197, 94, 0.2);
    transform: scale(1.05);
  }
}

.checkmark {
  font-size: 14px;
  color: rgb(34, 197, 94);
  animation: checkmarkAppear 0.3s ease-out;
}

@keyframes checkmarkAppear {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.storyInput {
  width: 100%;
  padding: 16px 20px;
  border: 1px solid rgba(0, 0, 0, 0);
  background: rgba(black, .03);
  border-radius: 12px;
  font-size: 16px;
  font-weight: 500;
  letter-spacing: -0.3px;
  line-height: 1.5;
  resize: none;
  min-height: 100px;
  transition: all 0.2s ease;
  
  &:focus {
    outline: none;
  }
}

.characterCount {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 14px;
}

.validText {
  color: rgb(34, 197, 94);
  font-weight: 600;
}

.warningText {
  color: rgba(239, 68, 68, 1);
  font-weight: 600;
}

.countText {
  color: rgba(0, 0, 0, 0.4);
}

// Bubble Popper Styles
.bubblePopperContainer {
  display: flex;
  flex-direction: column;
  gap: 24px;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
}

.bubbleGameHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px 24px;
  background: rgba(0, 0, 0, 0.03);
  border-radius: 12px;
}

.bubbleStat {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.bubbleStatValue {
  font-size: 28px;
  font-weight: 700;
  color: $orange;
}

.bubbleStatLabel {
  font-size: 13px;
  color: rgba(0, 0, 0, 0.5);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.timeWarning {
  color: rgb(239, 68, 68);
  animation: pulse 1s ease-in-out infinite;
}

.timerProgressBar {
  width: 100%;
  height: 8px;
  background: rgba(0, 0, 0, 0.08);
  border-radius: 8px;
  overflow: hidden;
  margin: 16px 0;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.06);
}

.timerProgressFill {
  height: 100%;
  background: linear-gradient(90deg, $orange, #fbbf24);
  border-radius: 8px;
  transition: width 1s linear, background 0.3s ease;
}

.timerProgressWarning {
  background: linear-gradient(90deg, rgb(239, 68, 68), rgb(252, 165, 165));
  animation: pulse 1s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.bubblesGrid {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  gap: 6px;
  padding: 20px;
  width: 300px;
  height: 300px;
  background: rgba(147, 197, 253, 0.1);
  border-radius: 16px;
}

.bubble {
  position: relative;
  aspect-ratio: 1 / 1;
  background: linear-gradient(135deg, rgba(147, 197, 253, 0.8), rgba(59, 130, 246, 0.8));
  border: 2px solid rgba(59, 130, 246, 0.4);
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.2s ease;
  overflow: hidden;
  
  &:hover:not(:disabled) {
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }
  
  &:active:not(:disabled) {
    transform: scale(0.95);
  }
}

.bubbleShine {
  position: absolute;
  top: 20%;
  left: 20%;
  width: 40%;
  height: 40%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0) 70%);
  border-radius: 50%;
  pointer-events: none;
}

.popped {
  background: transparent;
  border-color: rgba(0, 0, 0, 0.05);
  cursor: default;
  
  &:hover {
    transform: none;
    box-shadow: none;
  }
}

.bubbleDisabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.gameEndMessage {
  text-align: center;
  padding: 16px;
  background: rgba(34, 197, 94, 0.1);
  border: 2px solid rgb(34, 197, 94);
  border-radius: 12px;
  color: rgb(21, 128, 61);
  font-weight: 600;
}

// Source button
.sourceButton {
  position: fixed;
  bottom: 24px;
  right: 92px;
  width: 56px;
  height: 56px;
  border-radius: 50%;
  background: rgba(249, 115, 22, 0.95);
  backdrop-filter: blur(8px);
  border: 2px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15), 0 2px 8px rgba(249, 115, 22, 0.25);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  z-index: 100;
  display: none;

  svg {
    width: 22px;
    height: 22px;
    color: white;
  }

  &:hover {
    background: rgba(249, 115, 22, 1);
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2), 0 3px 12px rgba(249, 115, 22, 0.4);
  }

  &:active {
    transform: scale(0.95);
  }
}

// Modal styles
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 24px;
}

.modalContent {
  background: white;
  border-radius: 16px;
  max-width: 800px;
  width: 100%;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 24px 24px 16px 24px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.modalTitle {
  font-size: 20px;
  font-weight: 700;
  color: rgba(0, 0, 0, 0.9);
  margin: 0;
}

.modalClose {
  background: none;
  border: none;
  font-size: 32px;
  line-height: 1;
  color: rgba(0, 0, 0, 0.4);
  cursor: pointer;
  padding: 0;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: all 0.2s ease;
  
  &:hover {
    background: rgba(0, 0, 0, 0.05);
    color: rgba(0, 0, 0, 0.7);
  }
}

.modalBody {
  flex: 1;
  overflow: auto;
  padding: 24px;
}

.jsonDisplay {
  font-family: 'Monaco', 'Menlo', 'Courier New', monospace;
  font-size: 13px;
  line-height: 1.6;
  background: rgba(0, 0, 0, 0.03);
  padding: 20px;
  border-radius: 8px;
  overflow: auto;
  margin: 0;
  color: rgba(0, 0, 0, 0.8);
  white-space: pre;
  word-break: break-all;
}

.modalFooter {
  padding: 16px 24px 24px 24px;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  display: flex;
  justify-content: flex-end;
}

.copyButton {
  background: $orange;
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  font-size: 15px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:hover {
    background: color-mix(in srgb, $orange 95%, black);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(249, 115, 22, 0.3);
  }
  
  &:active {
    transform: translateY(0);
  }
}

